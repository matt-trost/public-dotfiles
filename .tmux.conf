# NOTE: Everything in this file is tested working on byobu 5.133 with tmux3.0a
# running on an Ubuntui 20.04 installation.
#
# The copy-paste settings work over ssh on MobaXterm, which importantly comes
# with an X server. However, you might need to re-export your DISPLAY
# environment variable each time you swap between the MobaXterm ssh'd session
# and the local ubuntu session. I recommend not swapping and just using
# MobaXTerm exclusively.
#
# NOTE: After making changes ot this file, press F5 to reload byobu so your
# chages will be read.
#
# NOTE: To see a list of keybindings, run `tmux list-keys` or type <prefix> ?

# Keybindings ###############################################################

# NOTE: see ~/.byobu/keybindings.tmux for more (present by default).

# Change prefix to CTRL-x since that's easier than default CTRL- b
set -g prefix C-x
bind C-x send-prefix

# If you want a secondary prefix, use the following, with `b` substituted to
# the key of your choice.
#set -g prefix2 C-b
#bind C-b send-prefix

# Split panes with ] and -
# prefix ] for tmux_horizontal, prefix - for tmux_vertical
# splits start in the pre-split current working directory. (-c option below)
# https://koenwoortman.com/tmux-remap-split-window-keys/
bind ] split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# SHIFT-F12 isn't working when sshed over MobaXterm, so use raw F10
# (seems to not be mapped to anything already) to toggle enable/disable of
# byobu keybindings.
#
# NOTE: some SHIFT-Function keys work when using MobaXterm Terminal Type
# "Byobu" (configured inside Edit Session->SSH->Terminal Settings->Terminal
# Type). SHIFT-F12 still doesn't work, though.
#
# NOTE: Mapping F10 instead of S-F12 required a sudo vim change to both
# $BYOBU_PREFIX/share/byobu/keybindings/f-keys.tmux and
# $BYOBU_PREFIX/share/byobu/keybindings/f-keys.tmux.disable
#
# These changes were already made in those files so nothing is needed here. The
# lines added are listed here for reference.
# In f-keys.tmux:         bind-key -n F10 source $BYOBU_PREFIX/share/byobu/keybindings/f-keys.tmux.disable \; display-message "Byobu F-keys: DISABLED"
# In f-keys.tmux.disable: bind-key -n F10 source $BYOBU_PREFIX/share/byobu/keybindings/f-keys.tmux \; source $HOME/.byobu/keybindings.tmux \; display-message "Byobu F-keys: ENABLED"

# Configurations ###########################################################

# Enable mouse support.
# https://askubuntu.com/questions/342845;/can-i-use-mouse-click-to-focus-on-byobu-splits
# NOTE: may need to do SHIFT-leftclick to select text after enabled mouse mode.
set -g mouse on

# Increase history limit for panes.
# https://stackoverflow.com/questions/18760281/how-do-i-increase-the-scrollback-buffer-size-in-tmux
set-option -g history-limit 20000

# Use vi keybindings in copy and choice modes.
# This enables vim searching etc for terminal scroll output.
set-window-option -g mode-keys vi

# Copy and Paste ############################################################

# Enter copy/scrollback mode with <prefix> [ or by scrolling up on the mouse.
# Select text with standard vi visual mode select/navigation. Then to copy your
# selection, look at the info below. tl;dr: use vi "y".

# USING TMUX BUFFERS ###

# Byobu/tmux has its own copy buffers that are not the same as the X system
# clipboard. You can see the buffers with `tmux-list-buffer`. Other relevant
# commands: show-buffer, set-buffer, choose-buffer, paste-buffer, save-buffer.
# If you're interested in just basic copy and paste, you don't need to worry
# about these. Just copy with with the vi-style "y" and paste with ALT-INSERT.

# To paste the most recently saved tmux buffer, use ALT-INSERT.

# To save the entire pane history to a file, use SHIFT-F7. This will save to
# $BYOBU_RUN_DIR/printscreen.

# Use vi "y" in scrollback/copy mode to copy to byobu buffer.
#bind-key -T copy-mode-vi y send-keys -X copy-selection \; send-keys -X cancel

# USING SYSTEM CLIPBOARD ###

# NOTE: in order to use X system clipboard you must have your $DISPLAY
# environment variable set correctly. To check if it is set correctly, you can
# attempt to run `xeyes`. If a pair of eyes appear on the screen, you're good.
# If it is set correctly but the copy commands aren't working, try existing the
# terminal and re-attaching byobu in a fresh terminal.

# How to get tmux buffer copies to also populate the system clipboard? Two main
# ways. Easiest is to enable set-clipboard, assuming the dependencies are
# present/supported. See https://github.com/tmux/tmux/wiki/Clipboard for
# details. If this works, you'll be able to copy your selections in
# scrollback/copy mode with either the Enter key or a vi-style "y". Enter will
# copy then exit copy mode, while "y" will execute the copy but stay in copy
# mode until Enter is pressed. If it doesn't work, it's probably easist to
# just use the second option rather than getting this one to work.
#set -s set-clipboard external

# Use vi "y" in scorllback mode to copy to X system clipboard.
# https://unix.stackexchange.com/questions/131011/use-system-clipboard-in-vi=copy-mode-in-tmux/607112
# Note: if want to exit copy mode after the copy, use copy-pip-and-cancel
# instead of copy-pipe below.
bind -T copy-mode-vi y send-keys -X copy-pipe 'xsel -i -b'

# If all else fails, can manually copy from tmux buffer to system clipboard
# (assuming proper DISPLAY set and xsel installed) with the following run from
# the shell:
# tmux show-buffer | xsel -i -b

# Note that even the above might not work for large copy sizes, probably due to
# X clipboard limits? The tmux buffer seems to be able to handle large copies,
# so you can save the buffer directly to a file with the save-buffer command.

# To paste from system clipboard to the byobu terminal when you're ssh'd in,
# you can hold down SHIFT and then right-click. Alternatively, you can use
# SHIFT-INSERT, or you can hold down CTRL, right click, and select Paste from
# the menu. Or you can add additional keybindings here for paste.


# Plugins ##################################################################

# Restores windows, panes, etc. after reboot.
# Can do additional work to cconfigure vim session restoration as well.
# Works with both tmux and byobu.
# For usage instructions, see: https://github.com/tmux-plugins/tmux-resurrect
set -g @plugin 'tmux-plugins/tmux-resurrect'

# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_pane_contents.md
set -g @resurrect-capture-pane-contents 'on'
# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/restoring_vim_and_neovim_sessions.md
#set -g @resurrect-strategy-vim 'session' # Requires Session.vim file present

# Reference  ################################################################

# The tmux man page is very helpful in understanidng the different options
# available to set in this config file.

# If a window gets stuck when opening vim, it could be because vim is trying to
# connect to a X server that no longer exists (e.g. from a pervious instance of
# MobaXterm. When this happens you can kill the window with :kill-window

# To renumber windows:
# :move-window -r
# https://unix.stackexchange.com/questions/21742/renumbering-windows-in-tmux

# Tmux Plugin Manager  #####################################################

# https://github.com/tmux-plugins/tpm
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

